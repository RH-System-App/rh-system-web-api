name: Finish Release

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  finish-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git and Java
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Detect current branch (release)
        id: detect_branch
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "Branch detectada: $BRANCH_NAME"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Get version from pom.xml
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          CLEAN_VERSION=$(echo "$VERSION" | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
          echo "Versão extraída: $CLEAN_VERSION"
          echo "version=$CLEAN_VERSION" >> $GITHUB_OUTPUT

      - name: Fetch main branch
        run: |
          git fetch origin main:main

      - name: Attempt merge release into main
        id: merge
        continue-on-error: true
        run: |
          git checkout main
          git merge --no-ff origin/${{ steps.detect_branch.outputs.branch }} -m "Merge release ${{ steps.version.outputs.version }}"

      - name: Push changes and create tag
        if: steps.merge.outcome == 'success'
        run: |
          git push origin main
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Create Pull Request via gh (if conflict)
        if: steps.merge.outcome != 'success'
        run: |
          echo "Conflitos detectados. Criando PR automática..."

          git fetch origin ${{ steps.detect_branch.outputs.branch }}:${{ steps.detect_branch.outputs.branch }}

          sudo apt-get update
          sudo apt-get install -y gh

          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

          gh pr create \
            --base main \
            --head ${{ steps.detect_branch.outputs.branch }} \
            --title "Finalize release ${{ steps.version.outputs.version }}" \
            --body "⚠️ Conflito ao tentar mesclar \`${{ steps.detect_branch.outputs.branch }}\` em \`main\`. Esta PR foi criada automaticamente para finalizar a release manualmente."
